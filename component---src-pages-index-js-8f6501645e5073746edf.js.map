{"version":3,"file":"component---src-pages-index-js-8f6501645e5073746edf.js","mappings":"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","sources":["webpack://thomas-blog/./src/components/bio.js","webpack://thomas-blog/./src/components/layout.js","webpack://thomas-blog/./src/components/seo.js","webpack://thomas-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport * as styles from \"../style.css\"\r\n\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            dp\r\n            bio\r\n            social {\r\n              twitter {\r\n                title\r\n                url\r\n                username\r\n              }\r\n              github {\r\n                title\r\n                url\r\n                username\r\n              }\r\n              dev {\r\n                title\r\n                url\r\n                username\r\n              }\r\n              email {\r\n                title\r\n                url\r\n                username\r\n              }\r\n              linkedin {\r\n                title\r\n                url\r\n                username\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\r\n  const author = data.site.siteMetadata?.author\r\n  const social_ids = data.site.siteMetadata?.author?.social\r\n  const _social_ids = Object.keys(social_ids)\r\n\r\n  return (\r\n    <section className={styles.bio}>\r\n      <section className={styles.imgWrapper}>\r\n        <img src={author.dp} alt=\"DP\" />\r\n      </section>\r\n      <section className={styles.bioWrapper}>\r\n        <div\r\n          className={styles.textWrapper}\r\n          dangerouslySetInnerHTML={{ __html: author.bio }}\r\n        />\r\n        <div className={styles.socialWrapper}>\r\n          {_social_ids.map((social_id, i) => (\r\n            <a\r\n              href={social_ids[social_id].url + social_ids[social_id].username}\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              key={i}\r\n            >\r\n              <img\r\n                src={`/blog/icons/${social_ids[social_id].title}.png`}\r\n                alt={social_ids[social_id].title}\r\n              />\r\n            </a>\r\n          ))}\r\n        </div>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  const isRootPath = location.pathname === rootPath\r\n  let header\r\n\r\n  if (isRootPath) {\r\n    header = (\r\n      <h1 className=\"main-heading\">\r\n        <Link to=\"/blog\">{title}</Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <Link className=\"header-link-home\" to=\"/blog\">\r\n        {title}\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\r\n      <header className=\"global-header\">{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta\r\n        name=\"twitter:creator\"\r\n        content={site.siteMetadata?.social?.twitter || ``}\r\n      />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Bio />\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2>\r\n                  <Link to={`/blog${post.fields.slug}`} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                    }}\r\n                    itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"All posts\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","_data$site$siteMetada3","data","useStaticQuery","author","site","siteMetadata","social_ids","social","_social_ids","Object","keys","React","className","styles","src","dp","alt","dangerouslySetInnerHTML","__html","bio","map","social_id","i","href","url","username","target","rel","key","title","_ref","location","children","isRootPath","pathname","header","Link","to","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","metaDescription","defaultTitle","name","content","property","twitter","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","style","listStyle","post","frontmatter","fields","slug","itemScope","itemType","itemProp","date","excerpt","Head","Seo"],"sourceRoot":""}